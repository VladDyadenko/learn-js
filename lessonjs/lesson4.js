// –ü—Ä–∏–º–µ—Ä 1 - –û—Å–Ω–æ–≤—ã –æ–±—ä–µ–∫—Ç–æ–≤
// –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π, –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ user, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ:
























// –ù–∞–ø–∏—à–∏—Ñ—É–Ω–∫—Ü—ñ—é calcBMI(weight, height)–∫–∞–∫ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î –∏ –ø–æ–≤–µ—Ä—Ç–µ
// —ñ–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –ª—é–¥–∏–Ω–∏.–î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–∏–¥–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏
//  –≤–∞–≥—É –≤ –∫—ñ–ª–æ–≥—Ä–∞–º–∞—Ö –Ω–∞ –ø–ª–æ—â–∞–¥–∏ –≤—ã—Å–æ—Ç–Ω–∏ –ª—é–¥–µ–π –≤ –º–µ—Ç—Ä–∞—Ö.

// –í–∞–≥–∞ –∏ –≤—ã—Å–æ—Ç–∞ –±—É–¥—É—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ —Ä—è–¥—ã.–ù–µ
//  —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã —É –≤–∏–≥–ª—è–¥–∞ –∏–ª–∏, —Ç–æ –µ—Å—Ç—å —è–∫
//  —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ 24.7–¥—Ä–æ–±–æ–≤–æ—ó 24, 7—á–∞—Å—Ç–∏–Ω–∏ –º–æ–∂–µ –±—É—Ç–∏ –∫–æ–º–∞.

// –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç—ñ–ª–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –æ–∫—Ä—É–≥–ª–∏—Ç–∏ –¥–æ –æ–¥–Ω–∏—Ö —Ü–∏—Ñ—Ä
// —Å–ø–∏—Å–∫ –∫–æ–º–∏;

// const bmi = calcBMI('90,5', '1,75');
// console.log(bmi); // 28.8

// function calcBMI(weight, height) {
//     weight = replaceCommaToDot(weight);
//     height = replaceCommaToDot(height);
//     return getRoundedNumber(weight / height ** 2);
// }


// function replaceCommaToDot(string) {
//     return string.replace(",", ".");

// }

// function getRoundedNumber(number) {
//     return +number.toFixed(1);
// }
    
// –ü—Ä–∏–º–µ—Ä 2 - –ù–∞–∏–º–µ–Ω—å—à–µ –∑ —á–∏—Å–µ–ª
// –ù–∞–ø–∏—à–∏—Ñ—É–Ω–∫—Ü—ñ—é min(a, b), –∫–∞–∫ –ø–æ–≤–µ—Ä—Ç–µ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
//  —á–∏—Å–µ–ª a—Ç–∞ b.

// function findLargestNumber(numbers) {
//     let max = numbers[0];
   
//     for (const number of numbers) {
//         if (number > max) {
//             max = number;

//         }
//     }
//     return max;

// }

// console.log(findLargestNumber([0, 2, 17, 94, 1, 23, 37])); // 94
// console.log(findLargestNumber([49, 4, 7, 83, 12])); // 83



// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏–º–µ–µ—Ç –¥–æ–≤–∏–ª—å–Ω–æ–µ
// calAverage()–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö
//  —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.–£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞–º–∏.

// function calAverage() {
//     const numbers = arguments;
//     const numbersAmount = numbers.length;
//     let sum = 0;
//     for (const number of numbers) {
//         sum += number;
//     }
//     return sum / numbersAmount;
// }

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2
// –í–∏–±–µ—Ä–µ —Ä–∞–Ω–¥–æ–º–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è

// const fruits = ['banana', 'apple', 'orange',
// 'watermelon', 'apple', 'orange', 'grape', 'apple',];
// const randomFruit = fruits[Math.floor(Math.random() * fruits.length)];
// console.log(randomFruit);

// –ü—Ä–∏–º–µ—Ä 2 - –ú–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª
// –ù–∞–ø–∏—à–∏ —Å–≤–æ–π—Å—Ç–≤–æ min(a,b), –∫–æ—Ç–æ—Ä–æ–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –º–µ–Ω—å—à–µ –∏–∑ —á–∏—Å–µ–ª a –∏ b.

// console.log(Math.min(2, 5));
// console.log(Math.min(3, -1));
// console.log(Math.min(1, 1));

// Example 7 - –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é calAverage() –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ
// –∫–æ–ª - –≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
// –í—Å–µ –∞—Ä—É–≥–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞–º–∏.


// function calAverage(... args) {
    
//     let sumTotal = 0;
   
//     for (i = 0; i < args.length; i += 1) {
//         sumTotal += args[i];
        
        
//     }
//     let someValue = sumTotal / args.length;
//     return someValue;
  
// }

// console.log(calAverage(1, 2, 3, 4));
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2

// Example 8 - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é formatTime(minutes) –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–µ–¥—ë—Ç
// –∑–Ω–∞—á–µ–Ω–∏–µ minutes(–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç) –≤ —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ
// —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç HH: MM.

// const hours = Math.floor(totalMinutes / 60);
// const minutes = totalMinutes % 60;
// console.log(hours);
// console.log(minutes);

// const doubleDigitHours = String(hours).padStart(2, 0);
// const doubleDigitMinutes = String(minutes).padStart(2, 0);
// console.log(`${doubleDigitHours}:${doubleDigitMinutes}`);

// function formatTime(minutes) {

//     const hours = Math.floor(minutes / 60);
//     const minute = minutes % 60;
//     // console.log(hours);
//     // console.log(minute);
//     const doubleDigitHours = String(hours).padStart(2, 0);
//     const doubleDigitMinutes = String(minute).padStart(2, 0);
//     const atMomentTime = `${doubleDigitHours}:${doubleDigitMinutes}`;
//     return atMomentTime;
// }

// console.log(formatTime(70));
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"

// const euros = [29.76, 41.85, 46.5];
// const sum = console.log(euros.reduce((total, amount) => total * amount).toFixed(2));

// const euros = [29.76, 41.85, 46.5];
// const average = euros.reduce((total, amount, index, array) => {
//   total += amount;
//     if (index === array.length - 1) {
//     return console.log(total/array.length);
//   }else {
//     return total;
//   }
// });
// console.log("üöÄ ~ file: lesson4.js ~ line 81 ~ average ~ average", average)
// const euros = [29.76, 41.85, 46.5];
// const doubled = euros.reduce((total, amount) => {
//   total.push(amount * 2);
//   return total;
// }, []);
// console.log( doubled)


// const fruitBasket = ['banana', 'cherry', 'orange', 'apple',
// 'cherry', 'orange', 'apple', 'banana', 'cherry', 'orange',
// 'fig'];
// const count = fruitBasket.reduce( (tally, fruit) => {
//   tally[fruit] = (tally[fruit] || 0) + 1 ;
//   return tally;
// } , {})
// console.log( count)

// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300, 9000025555';

// const adressBook = names.split(",").concat(phones.split(","));
// console.log(adressBook)
// let newAdressBook = [];
// for (i = 0; i < adressBook.length / 2; i += 1) {
//     if (adressBook % 2) {
//         newAdressBook = (adressBook[i] + ": " + adressBook[(adressBook.length / 2) + i]);
        
//     console.table(newAdressBook)
//     } else {
//         newAdressBook = ( adressBook[i] + ": " + adressBook[Math.ceil(adressBook.length / 2) + i]);
//         console.table(newAdressBook)
//     }
     
    
// }
    

// const mistake = names.reduce((total, phon) => {
//     total.push(phon);
//     return total;
// }, []);

// const apartment = {
//   imgUrl: "https://via.placeholder.com/640x480",
//   descr: "Spacious apartment in the city center",
//   rating: 4,
//   price: 2153,
//   tags: ["premium", "promoted", "top"],
// };
// apartment.owner = {
//   name: "Henry",
//   phone: "982-126-1588",
//   email: "henry.carter@aptmail.com",
// }
// console.log(apartment)

// const apartment = {
//   descr: "Spacious apartment in the city center",
//   rating: 4,
//   price: 2153,
// };
// const values = [];
// console.log( values)
// // Change code below this line
// const keys = Object.keys(apartment);


// for (const key of keys) {
//     console.log(key)
//     values.push(apartment[key]);
// }

// function countProps(object) {
//   // Change code below this line
//     let propCount = 0;
    
//     const keys = Object.keys(object);
  
//     for (const key in object) {
      
//     if (object.hasOwnProperty(key)) {
//       propCount += 1;
      
//     }
//   }
  
//   return propCount;
//   // Change code above this line
// }



// function countProps(object) {
//   // Change code below this line
//   let propCount = 0;
  
// const keys = Object.keys(object);
  
//   for (const key in keys) {
//     if (keys.hasOwnProperty(key)) {
//       propCount += 1;
//     }
//   }

//   return propCount;
//   // Change code above this line
// }
// console.log(countProps({ name: "Mango", age: 2 }));
// console.log(countProps({ mail: "poly@mail.com", isOnline: true, score: 500 }));
// console.log(countProps({}));

// const apartment = {
//   descr: "Spacious apartment in the city center",
//   rating: 4,
//   price: 2153,
// };
// const values = [];
// let propCount = 0;
// // Change code below this line
// const keys = Object.keys(apartment);


// for (const key of keys) {

//     values.push(apartment[key]);
//     if (keys.hasOwnProperty(key)) {
//         propCount += 1;
//         console.log(propCount)
//     }
// }




// function countTotalSalary(salaries) {
//   let totalSalary = 0;
//   // Change code below this line
    

//     for (const key in salaries) {
//         if(salaries.hasOwnProperty(key))
//         totalSalary += salaries[key];
//     }
//   // Change code above this line
//   return totalSalary;
// }

// console.log(countTotalSalary({ mango: 100, poly: 150, alfred: 80 }));
// console.log(countTotalSalary({}));



// const colors = [
//   { hex: "#f44336", rgb: "244,67,54" },
//   { hex: "#2196f3", rgb: "33,150,243" },
//   { hex: "#4caf50", rgb: "76,175,80" },
//   { hex: "#ffeb3b", rgb: "255,235,59" },
// ];

// const hexColors = [];
// console.log( hexColors)
// const rgbColors = [];
// console.log( rgbColors)
// // Change code below this line

// for (const key of colors) {
//     hexColors.push(key.hex);
//     rgbColors.push(key.rgb);
// }



// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];

// function getProductPrice(productName) {
//   // Change code below this line
    
//     for (const key of products) {
//         console.log(key);
//         if (key.name === productName) {
//             return key.price
//         }
  
//     }
//     return null;
//   // Change code above this line
// }
// console.log(getProductPrice("Radar"));
// console.log(getProductPrice("Grip"));
// console.log(getProductPrice("Engine"));


// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];

// function getAllPropValues(propName) {
//     let result = [];
  
//     for (const product of products) {
        
//         if (propName in product) {
//             console.log( propName in product )
//             result.push(product[propName]);
//         }
//     }
  
//     return result;

// }

// console.log(getAllPropValues("name"));
// console.log(getAllPropValues("quantity"));
// console.log(getAllPropValues("price"));
// console.log(getAllPropValues("category"));


// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateTotalPrice(productName),
//     —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä productName - –Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É.
//     –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É
// –≤–∞—Ä—Ç—ñ—Å—Ç—å(—Ü—ñ–Ω–∞ * –∫—ñ–ª—å–∫—ñ—Å—Ç—å) —Ç–æ–≤–∞—Ä—É –∑ —Ç–∞–∫–∏–º
// —ñ–º'—è–º –∑ –º–∞—Å–∏–≤—É products.

// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];

// function calculateTotalPrice(productName) {
//   // Change code below this line
//     let total = 0;

//     for (const product of products) {
//         console.log(product)
//         if (product.name === productName) {
//             total += product.price * product.quantity;
//         }
        
     

       
//     }

//     return total;
//   // Change code above this line
// }
// console.log(calculateTotalPrice("Radar"));
// console.log(calculateTotalPrice("Droid"));
// console.log(calculateTotalPrice("Blaster"));

// const highTemperatures = {
//   yesterday: 28,
//   today: 26,
//   tomorrow: 33,
// };

// const {yesterday, today, tomorrow} = highTemperatures;

// const meanTemperature = (yesterday + today + tomorrow) / 3;

// –£ –ø—Ä–æ–≥–Ω–æ–∑—ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä —Ç–∞–∫–æ–∂ –º–æ–∂–µ –±—É—Ç–∏
// –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å icon - —ñ–∫–æ–Ω–∫–∞ –ø–æ–≥–æ–¥–∏.
// –ó–∞–º—ñ–Ω–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö yesterday, today, tomorrow —ñ
// icon –æ–¥–Ω—ñ—î—é –æ–ø–µ—Ä–∞—Ü—ñ—î—é –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π
// –æ–±'—î–∫—Ç–∞ highTemperatures.–ó–∞–¥–∞–π –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è
// icon -
// —Ä—è–¥–æ–∫ "https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg".

// const highTemperatures = {
//   yesterday: 28,
//   today: 26,
//   tomorrow: 33,
// };
// // Change code below this line

// const { yesterday, today, tomorrow, icon = "https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg" } = highTemperatures;



// // const yesterday = highTemperatures.yesterday;
// // const today = highTemperatures.today;
// // const tomorrow = highTemperatures.tomorrow;
// // const icon = highTemperatures.icon;

// // Change code above this line
// const meanTemperature = (yesterday + today + tomorrow) / 3;
// console.log("üöÄ ~ file: lesson4.js ~ line 448 ~ meanTemperature", meanTemperature)


// –ó–∞–º—ñ–Ω–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö highYesterday, highToday,
//highTomorrow —ñ highIcon –æ–¥–Ω—ñ—î—é –æ–ø–µ—Ä–∞—Ü—ñ—î—é –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó
// –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –æ–±'—î–∫—Ç–∞ highTemperatures.
// –ó–∞–¥–∞–π –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è highIcon - —Ä—è–¥–æ–∫
// "https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg".

// const highTemperatures = {
//   yesterday: 28,
//   today: 26,
//   tomorrow: 33,
// };
// // Change code below this line

// const { yesterday: highYesterday, today: highToday, tomorrow : highTomorrow, highIcon = "https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg" } = highTemperatures;


// // const highYesterday = highTemperatures.yesterday;
// // const highToday = highTemperatures.today;
// // const highTomorrow = highTemperatures.tomorrow;
// // const highIcon = highTemperatures.icon;

// // Change code above this line
// const meanTemperature = (highYesterday + highToday + highTomorrow) / 3;


// const colors = [
//   { hex: "#f44336", rgb: "244,67,54" },
//   { hex: "#2196f3", rgb: "33,150,243" },
//   { hex: "#4caf50", rgb: "76,175,80" },
//   { hex: "#ffeb3b", rgb: "255,235,59" },
// ];

// const hexColors = [];
// console.log("üöÄ ~ file: lesson4.js ~ line 484 ~ hexColors", hexColors)
// const rgbColors = [];
// console.log("üöÄ ~ file: lesson4.js ~ line 486 ~ rgbColors", rgbColors)
// // Change code below this line

// for (const {hex, rgb} of colors) {
//   hexColors.push(hex);
//   rgbColors.push(rgb);
// }

// –ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ –¥–≤–∞ –¥–Ω—ñ, –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º–∏
//  —ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–º–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞–º–∏, –∞ —Ç–∞–∫–æ–∂ –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º–∏ —ñ–∫–æ–Ω–∫–∞–º–∏.
//  –ó–∞–º—ñ–Ω–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –≤—Å—ñ—Ö –∑–º—ñ–Ω–Ω–∏—Ö –æ–¥–Ω—ñ—î—é –æ–ø–µ—Ä–∞—Ü—ñ—î—é
//   –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –æ–±'—î–∫—Ç–∞ forecast.
//   –ó–∞–¥–∞–π –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è —ñ–∫–æ–Ω–æ–∫,
//     –∑–º—ñ–Ω–Ω–∏—Ö todayIcon —ñ tomorrowIcon - —Ä—è–¥–æ–∫
// "https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg".


// const forecast = {
//   today: {
//     low: 28,
//     high: 32,
//     icon: "https://www.flaticon.com/svg/static/icons/svg/861/861059.svg",
//   },
//   tomorrow: {
//     low: 27,
//     high: 31,
//   },
// };
// Change code below this line
// const { today: { low: lowToday, high: highToday, icon: todayIcon = "https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg" },
//     tomorrow: { low: lowTomorrow, high: highTomorrow, icon: tomorrowIcon = "https://www.flaticon.com/svg/static/icons/svg/2204/2204346.svg" } } = forecast;

// const highToday = forecast.today.high;
// const lowToday = forecast.today.low;
// const todayIcon = forecast.today.icon;

// const highTomorrow = forecast.tomorrow.high;
// const lowTomorrow = forecast.tomorrow.low;
// const tomorrowIcon = forecast.tomorrow.icon;

// function calculateMeanTemperature(forecast) {
// //   const todayLow = forecast.today.low;
// //   const todayHigh = forecast.today.high;
// //   const tomorrowLow = forecast.tomorrow.low;
// //   const tomorrowHigh = forecast.tomorrow.high;

//   // Change code above this line
//     const { today: { low: todayLow, high: todayHigh },
//         tomorrow: { low: tomorrowLow, high: tomorrowHigh } } = forecast;
    
//   return (todayLow + todayHigh + tomorrowLow + tomorrowHigh) / 4;
// }
// console.log(calculateMeanTemperature({ today: { low: 28, high: 32 }, tomorrow: { low: 25, high: 29 } }));

// const scores = [89, 64, 42, 17, 93, 51, 26];
// // Change code below this line
// const bestScore = Math.max(...scores);
// const worstScore = Math.min(...scores);

// const temps = [14, -4, 25, 8, 11];

// // –¶–µ —Ç–æ—á–Ω–∞, –∞–ª–µ –Ω–µ–∑–∞–ª–µ–∂–Ω–∞ –∫–æ–ø—ñ—è –º–∞—Å–∏–≤—É temps
// const copyOfTemps = [...temps];
// console.log(copyOfTemps); // [14, -4, 25, 8, 11]
// temps[0] = 10;
// console.log(temps)
// console.log(copyOfTemps)

// const firstGroupScores = [64, 42, 93];
// const secondGroupScores = [89, 14, 51, 26];
// const thirdGroupScores = [29, 47, 18, 97, 81];
// // Change code below this line
// const allScores = [...firstGroupScores,...secondGroupScores,...thirdGroupScores];
// const bestScore = Math.max(...allScores);
// const worstScore = Math.min(...allScores);

// const defaultSettings = {
//   theme: "light",
//   public: true,
//   withPassword: false,
//   minNumberOfQuestions: 10,
//   timePerQuestion: 60,
// };
// const overrideSettings = {
//   public: false,
//   withPassword: true,
//   timePerQuestion: 30,
// };
// // Change code below this line
// const finalSettings = {...defaultSettings, ...overrideSettings};
// console.log( finalSettings)

// function makeTask(data) {

 

//     let newObject = { completed: false,
//    category: "General",
//    priority: "Normal",}
  
//   // Change code below this line
//     let object = {...newObject, ...data};
//   return object;
//   // Change code above this line
// }



// // console.log(makeTask({}));
// console.log(makeTask({
//     category: "Homemade", priority: "Low",
//     text: "Take out the trash"
// }));
// console.log(makeTask({
//     category: "Finance",
//     text: "Take interest"
// }));

// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é rest, –¥–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó add()
//  —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø—Ä–∏–π–º–∞–ª–∞ –±—É–¥—å - —è–∫—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤,
//     —Ä–∞—Ö—É–≤–∞–ª–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ —ó—Ö —Å—É–º—É.

// Change code below this line
// function add(...args) {
//     console.log(args)
//     const values = args;
//     let total = 0;
    
//     for (const value of values) {
        
//         total += value;
//     }
    
//     return total;
//   // Change code above this line
// }
// console.log(add(15, 27));

// –§—É–Ω–∫—Ü—ñ—è addOverNum() —Ä–∞—Ö—É—î —Å—É–º—É –≤—Å—ñ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤.
//  –ó–º—ñ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —ñ —Ç—ñ–ª–æ —Ñ—É–Ω–∫—Ü—ñ—ó addOverNum() —Ç–∞–∫–∏–º —á–∏–Ω–æ–º,
//     —â–æ–± –≤–æ–Ω–∞ —Ä–∞—Ö—É–≤–∞–ª–∞ —Å—É–º—É —Ç—ñ–ª—å–∫–∏ —Ç–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤, —è–∫—ñ –±—ñ–ª—å—à—ñ
//     –∑–∞ –∑–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ.–¶–µ —á–∏—Å–ª–æ –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Ñ—É–Ω
// Change code below this line
// function addOverNum(firstNumber,...args) {
//   let total = 0;

//     for (const arg of args) {
//       if(arg > firstNumber)
//     total += arg;
//   }

//   return total;
//   // Change code above this line
// }
// console.log(addOverNum(50, 15, 27));
// console.log(addOverNum(10, 12, 4, 11, 48, 10, 8));

// –§—É–Ω–∫—Ü—ñ—è findMatches() –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤.
// –ü–µ—Ä—à–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∑–∞–≤–∂–¥–∏ –±—É–¥–µ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª, –∞ —Ä–µ—à—Ç–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
// –±—É–¥—É—Ç—å –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–∞–º–∏.

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –Ω–æ–≤–∏–π
//  –º–∞—Å–∏–≤ matches, –≤ —è–∫–æ–º—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏, –ø–æ—á–∏–Ω–∞—é—á–∏
//   –∑ –¥—Ä—É–≥–æ–≥–æ, —è–∫—ñ —î –≤ –º–∞—Å–∏–≤—ñ –ø–µ—Ä—à–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç—É.

//     –ù–∞–ø—Ä–∏–∫–ª–∞–¥, findMatches([1, 2, 3, 4, 5], 1, 8, 2, 7) –ø–æ–≤–∏–Ω–Ω–∞
// –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –º–∞—Å–∏–≤[1, 2], —Ç–æ–º—É —â–æ —Ç—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ —î –≤ –º–∞—Å–∏–≤—ñ
// –ø–µ—Ä—à–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç—É.

// Change code below this line
// function findMatches(FirstValue, ...args) {
//   console.log( args)
//   console.log( FirstValue)
//   const matches = []; // Don't change this line
    
//     for (const arg of args) {
//         for (value of FirstValue) {
//             if (arg === value) {
//                 matches.push(value);
//             }
//         }
//     }
//     return matches;
//   // Change code above this line
//   return matches;
// }


// console.log(findMatches([1, 2, 3, 4, 5], 1, 8, 2, 7));
// console.log(findMatches([4, 89, 17, 36, 2], 8, 17, 89, 27, 2));


// –î–æ–¥–∞–π –æ–±'—î–∫—Ç—É bookShelf —â–µ –¥–≤–∞ –º–µ—Ç–æ–¥–∏, —è–∫—ñ –ø–æ–∫–∏ —â–æ –±—É–¥—É—Ç—å
// –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –ø—Ä–æ—Å—Ç–æ —Ä—è–¥–∫–∏ –∑–∞ –∞–Ω–∞–ª–æ–≥—ñ—î—é –∑
// getBooks() —ñ addBook(bookName).

// –ú–µ—Ç–æ–¥ removeBook(bookName) –±—É–¥–µ –≤–∏–¥–∞–ª—è—Ç–∏ –∫–Ω–∏–≥—É –∑–∞ –Ω–∞–∑–≤–æ—é.
// –ü–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ "Deleting book <–Ω–∞–∑–≤–∞ –∫–Ω–∏–≥–∏>",
// –¥–µ < –Ω–∞–∑–≤–∞ –∫–Ω–∏–≥–∏ > - —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ bookName.

// –ú–µ—Ç–æ–¥ updateBook(oldName, newName) –±—É–¥–µ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –Ω–∞–∑–≤—É
//  –∫–Ω–∏–≥–∏ –Ω–∞ –Ω–æ–≤—É.–ü–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ "Updating book <—Å—Ç–∞—Ä–∞ –Ω–∞–∑–≤–∞>
// to < –Ω–æ–≤–∞ –Ω–∞–∑–≤–∞ > ", –¥–µ < —Å—Ç–∞—Ä–∞ –Ω–∞–∑–≤–∞ > —ñ < –Ω–æ–≤–∞ –Ω–∞–∑–≤–∞ > -
// —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ oldName —ñ newName –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ.

// const bookShelf = {
//   // Change code below this line
//   books: ["The last kingdom", "The guardian of dreams"],
//   getBooks() {
//     return "Returning all books";
//   },
//   addBook(bookName) {
//     return `Adding book ${bookName}`;
//     },
//   removeBook(bookName) {

//     return `Deleting book ${bookName}`
//     },
//   updateBook(oldName, newName) {
      
//     return `Updating book ${oldName}
//      to ${newName}`;
//     }
//   // Change code above this line
// };

// console.log(bookShelf.getBooks());
// console.log(bookShelf.addBook("Haze"));
// console.log(bookShelf.removeBook("Red sunset"));
// console.log(bookShelf.updateBook("Sands of dune", "Dune"));

// –î–æ–ø–æ–≤–Ω–∏ –º–µ—Ç–æ–¥ updateBook(oldName, newName) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º,
// —â–æ–± –≤—ñ–Ω –∑–º—ñ–Ω—é–≤–∞–≤ –Ω–∞–∑–≤—É –∫–Ω–∏–≥–∏ –∑ oldName –Ω–∞ newName —É
// –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ books.–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π indexOf() –¥–ª—è —Ç–æ–≥–æ,
// —â–æ–± –∑–Ω–∞–π—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É, —ñ splice() –¥–ª—è —Ç–æ–≥–æ,
// —â–æ–± –∑–∞–º—ñ–Ω–∏—Ç–∏ —Ü–µ–π –µ–ª–µ–º–µ–Ω—Ç.

// const bookShelf = {
//   books: ["The last kingdom", "Haze", "The guardian of dreams"],
//   updateBook(oldName, newName) {
//     // Change code below this line
//       const { books } = this;
//       const oldBookLength = [...books].indexOf(oldName);
//       console.log(oldBookLength)
//       return books.splice(oldBookLength, 1, newName);
   
//   },
// };

// bookShelf.updateBook("Haze", "Dungeon chronicles");
// console.log(bookShelf.books);
// bookShelf.updateBook("The last kingdom", "Dune");
// console.log(bookShelf.books);


// –î–æ –Ω–∞—Å –∑–≤–µ—Ä–Ω—É–ª–∞—Å—è –≤–ª–∞—Å–Ω–∏—Ü—è –∫—Ä–∞–º–Ω–∏—Ü—ñ –∑—ñ–ª–ª—è
//  ¬´–£ —Å—Ç–∞—Ä–æ—ó –∂–∞–±–∏¬ª —ñ –∑–∞–º–æ–≤–∏–ª–∞ –ø—Ä–æ–≥—Ä–∞–º—É –¥–ª—è –≤–µ–¥–µ–Ω–Ω—è
// —ñ–Ω–≤–µ–Ω—Ç–∞—Ä—é - –¥–æ–¥–∞–≤–∞–Ω–Ω—è, –≤–∏–¥–∞–ª–µ–Ω–Ω—è, –ø–æ—à—É–∫—É —Ç–∞
// –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑—ñ–ª–ª—è.
// –î–æ–¥–∞–π –æ–±'—î–∫—Ç—É atTheOldToad –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å potions,
//  –∑–Ω–∞—á–µ–Ω–Ω—è–º —è–∫–æ—ó –∑—Ä–æ–±–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤.


// const atTheOldToad = {
//   potions: ["Speed potion", "Dragon breath", "Stone skin"],
//   updatePotionName(oldName, newName) {
//     // Change code below this line
//       const { potions } = this;
//       let numberOldName = potions.indexOf(oldName);
//       return potions.splice(numberOldName, 1, newName);

//     // Change code above this line
//   },
// };


